/* Copyright 2018 Pedro Cuadra - pjcuadra@gmail.com
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* WARNING: This file is automatically generated by raml2agl */
extern "C"
{
   #define AFB_BINDING_VERSION 2
   #include <afb/afb-binding.h>
};


#include <cstddef>
#include <cstdio>
#include <cstring>

#include <json-c/json.h>

#include <service/ServiceRoverLights.h>
// #include <all_types.h>

static ServiceRoverLights obj;

static int init()
{
  int rc = 0;
	AFB_NOTICE("Initializing... ");
  rc = obj.init();
	AFB_NOTICE("Initialization done!");
	return rc;
}

static void turning_right_on(struct afb_req request) {
  json_object *args = afb_req_json(request);
  int ret = 0;

  AFB_NOTICE("[roverlights] Calling turning_right_on");


  if (args) {
    // Parse args if possible


  }


  ret = obj.turning_right_on();
  if (ret) {
    AFB_ERROR("[roverlights] Verb 'turning_right_on' returning error");
    afb_req_fail_f(request, "bad-request", "Verb 'turning_right_on' returning error %d", ret);
    return;
  }



  afb_req_success(request, args, NULL);

}

static void parking_signal_on(struct afb_req request) {
  json_object *args = afb_req_json(request);
  int ret = 0;

  AFB_NOTICE("[roverlights] Calling parking_signal_on");


  if (args) {
    // Parse args if possible


  }


  ret = obj.parking_signal_on();
  if (ret) {
    AFB_ERROR("[roverlights] Verb 'parking_signal_on' returning error");
    afb_req_fail_f(request, "bad-request", "Verb 'parking_signal_on' returning error %d", ret);
    return;
  }



  afb_req_success(request, args, NULL);

}

static void turn_on_lights(struct afb_req request) {
  json_object *args = afb_req_json(request);
  int ret = 0;

  AFB_NOTICE("[roverlights] Calling turn_on_lights");


  if (args) {
    // Parse args if possible


  }


  ret = obj.turn_on_lights();
  if (ret) {
    AFB_ERROR("[roverlights] Verb 'turn_on_lights' returning error");
    afb_req_fail_f(request, "bad-request", "Verb 'turn_on_lights' returning error %d", ret);
    return;
  }



  afb_req_success(request, args, NULL);

}

static void turning_left_on(struct afb_req request) {
  json_object *args = afb_req_json(request);
  int ret = 0;

  AFB_NOTICE("[roverlights] Calling turning_left_on");


  if (args) {
    // Parse args if possible


  }


  ret = obj.turning_left_on();
  if (ret) {
    AFB_ERROR("[roverlights] Verb 'turning_left_on' returning error");
    afb_req_fail_f(request, "bad-request", "Verb 'turning_left_on' returning error %d", ret);
    return;
  }



  afb_req_success(request, args, NULL);

}

static void turn_off_lights(struct afb_req request) {
  json_object *args = afb_req_json(request);
  int ret = 0;

  AFB_NOTICE("[roverlights] Calling turn_off_lights");


  if (args) {
    // Parse args if possible


  }


  ret = obj.turn_off_lights();
  if (ret) {
    AFB_ERROR("[roverlights] Verb 'turn_off_lights' returning error");
    afb_req_fail_f(request, "bad-request", "Verb 'turn_off_lights' returning error %d", ret);
    return;
  }



  afb_req_success(request, args, NULL);

}


// static const struct afb_auth _afb_auths_v2_monitor[] = {
// 	{type : afb_auth_Permission, text : "urn:AGL:permission:monitor:public:set"},
// 	{type : afb_auth_Permission, text : "urn:AGL:permission:monitor:public:get"},
// 	{type : afb_auth_Or, first : &_afb_auths_v2_monitor[1], next : &_afb_auths_v2_monitor[0]}
// };

static const struct afb_verb_v2 verbs[] = {
  /*Without security*/
  {.verb = "turning_right_on", .callback = turning_right_on, .auth = NULL, .info = "Turn on right turning blinking signal", .session = 0},
  {.verb = "parking_signal_on", .callback = parking_signal_on, .auth = NULL, .info = "Turn on parking signal", .session = 0},
  {.verb = "turn_on_lights", .callback = turn_on_lights, .auth = NULL, .info = "Turn on headlights", .session = 0},
  {.verb = "turning_left_on", .callback = turning_left_on, .auth = NULL, .info = "Turn on left turning blinking signal", .session = 0},
  {.verb = "turn_off_lights", .callback = turn_off_lights, .auth = NULL, .info = "Turn off headlights", .session = 0},
  {.verb= NULL, .callback=NULL, .auth = NULL, .info = NULL, .session = 0 }
};

const struct afb_binding_v2 afbBindingV2 = {
  .api = "roverlights",
  .specification = "",
  .info = "Auto generated - Rover Lights",
  .verbs = verbs,
  .preinit = NULL,
  .init = init,
  .onevent = NULL,
  .noconcurrency = 1
};