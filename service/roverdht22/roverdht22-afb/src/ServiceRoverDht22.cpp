/* Copyright 2018 Pedro Cuadra - pjcuadra@gmail.com
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* WARNING: This file is automatically generated by raml2agl */
#include <service/ServiceRoverDht22.h>
#include <roverapi/rover_dht22.hpp>
#include <roverapi/rover_api.hpp>

using namespace rover;

static RoverDHT22 obj;
static RoverBase base;

ServiceRoverDht22::ServiceRoverDht22() {
  AFB_NOTICE("[ServiceRoverDht22] Constructor ");
}

int ServiceRoverDht22::init() {
  AFB_NOTICE("[ServiceRoverDht22] Init ");

  base.initialize();
  obj.initialize();

  return 0;
}


/** Autogenrated doc for get_pin */
int ServiceRoverDht22::get_pin(int &out_pin) {

  AFB_NOTICE("[ServiceRoverDht22] Get_pin");

  out_pin =  obj.getDHT22Pin();

  return 0;
}

/** Autogenrated doc for read */
int ServiceRoverDht22::read(double &out_temperature) {

  AFB_NOTICE("[ServiceRoverDht22] Read");
  out_temperature = static_cast<double>(obj.readTemperature());

  return 0;
}

/** Autogenrated doc for read_humidity */
int ServiceRoverDht22::read_humidity(double &out_humidity) {

  AFB_NOTICE("[ServiceRoverDht22] Read_humidity");
  out_humidity = static_cast<double>(obj.readHumidity());

  return 0;
}

/** Autogenrated doc for read_temperature */
int ServiceRoverDht22::read_temperature(double &out_temperature) {

  AFB_NOTICE("[ServiceRoverDht22] Read_temperature");
  // out_temperature = static_cast<double>(obj.readTemperature());
  out_temperature = 6;

  return 0;
}

/** Autogenrated doc for set_pin */
int ServiceRoverDht22::set_pin(const int in_pin) {

  AFB_NOTICE("[ServiceRoverDht22] Set_pin");

  obj.setDHT22Pin(in_pin);

  return 0;
}
