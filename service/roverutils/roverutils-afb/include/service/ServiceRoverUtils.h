/* Copyright 2018 Pedro Cuadra - pjcuadra@gmail.com
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* WARNING: This file is automatically generated by raml2agl */
#ifndef __RAML2AGL_SERVICE_CLASS_SERVICEROVERUTILS_H_
#define __RAML2AGL_SERVICE_CLASS_SERVICEROVERUTILS_H_

#pragma once
#include <cstddef>
#include <string.h>
#include <string>

extern "C"
{
    #define AFB_BINDING_VERSION 2
    #include <afb/afb-binding.h>
};

enum rover_button_id {
  user_button,
  shutdown_button,
  custom_button
};
enum rover_demo_id {
  buzzer,
  driving,
  buttons,
  infrared,
  rover_demo_max
};
enum rover_sensor_id {
  rear_right,
  rear_left,
  front_right,
  front_left,
  front,
  rear
};

class ServiceRoverUtils {
public:
  ServiceRoverUtils();

  int init();

    /** Autogenrated doc for get_bluetooth_status */
    int get_bluetooth_status(bool &out_is_on);

    /** Autogenrated doc for get_core_utilization */
    int get_core_utilization(double out_core_utilization[], int in_core_utilization_size);

    /** Autogenrated doc for get_ethernet_status */
    int get_ethernet_status(bool &out_is_on);

    /** Autogenrated doc for get_honocloud_status */
    int get_honocloud_status(const std::string in_host_name,
        const int in_port,
        const std::string in_tenant_name,
        const std::string in_device_id,
        const std::string in_user,
        const std::string in_password,
        bool &out_is_on);

    /** Autogenrated doc for get_interface_info */
    int get_interface_info(const int in_interface_idx,
        std::string &out_interface_name,
        std::string &out_ip_addr,
        std::string &out_hw_addr);

    /** Autogenrated doc for get_internet_status */
    int get_internet_status(bool &out_is_on);

    /** Autogenrated doc for get_number_cores */
    int get_number_cores(int &out_num_cores);

    /** Autogenrated doc for get_number_of_network_interfaces */
    int get_number_of_network_interfaces(int &out_num_interface);

    /** Autogenrated doc for get_wlan_status */
    int get_wlan_status(bool &out_is_on);

};

#endif //__RAML2AGL_SERVICE_CLASS_SERVICEROVERUTILS_H_