/* Copyright 2018 Pedro Cuadra - pjcuadra@gmail.com
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* WARNING: This file is automatically generated by raml2agl */
#ifndef __RAML2AGL_SERVICE_CLASS_SERVICEROVERDISPLAY_H_
#define __RAML2AGL_SERVICE_CLASS_SERVICEROVERDISPLAY_H_

#pragma once
#include <cstddef>
#include <string.h>
#include <string>

extern "C"
{
    #define AFB_BINDING_VERSION 2
    #include <afb/afb-binding.h>
};

enum rover_button_id {
  user_button,
  shutdown_button,
  custom_button
};
enum rover_demo_id {
  buzzer,
  driving,
  buttons,
  infrared,
  rover_demo_max
};
enum rover_sensor_id {
  rear_right,
  rear_left,
  front_right,
  front_left,
  front,
  rear
};

class ServiceRoverDisplay {
public:
  ServiceRoverDisplay();

  int init();

    /** Autogenrated doc for clear_display */
    int clear_display();

    /** Autogenrated doc for display */
    int display();

    /** Autogenrated doc for draw_bitmap */
    int draw_bitmap(const int in_x_loc,
        const int in_y_loc,
        const int in_bitmap[], const int in_bitmap_size,
        const int in_w_size,
        const int in_h_size,
        const int in_color);

    /** Autogenrated doc for draw_char */
    int draw_char(const int in_x_loc,
        const int in_y_loc,
        const int in_character,
        const int in_color,
        const int in_bg_color,
        const int in_size);

    /** Autogenrated doc for draw_circle */
    int draw_circle(const int in_x_loc,
        const int in_y_loc,
        const int in_r_size,
        const int in_color,
        const bool in_filled);

    /** Autogenrated doc for draw_line */
    int draw_line(const int in_x1_loc,
        const int in_y1_loc,
        const int in_x2_loc,
        const int in_y2_loc,
        const int in_color);

    /** Autogenrated doc for draw_pixel */
    int draw_pixel(const int in_x_loc,
        const int in_y_loc,
        const int in_color);

    /** Autogenrated doc for draw_rectangle */
    int draw_rectangle(const int in_x_loc,
        const int in_y_loc,
        const int in_w_size,
        const int in_h_size,
        const int in_color,
        const bool in_filled);

    /** Autogenrated doc for draw_round_rectangle */
    int draw_round_rectangle(const int in_x_loc,
        const int in_y_loc,
        const int in_w_size,
        const int in_h_size,
        const int in_r_size,
        const int in_color,
        const bool in_filled);

    /** Autogenrated doc for draw_triangle */
    int draw_triangle(const int in_x1_loc,
        const int in_y1_loc,
        const int in_x2_loc,
        const int in_y2_loc,
        const int in_x3_loc,
        const int in_y3_loc,
        const int in_color,
        const bool in_filled);

    /** Autogenrated doc for fill_screen */
    int fill_screen(const int in_color);

    /** Autogenrated doc for get_height */
    int get_height(int &out_height);

    /** Autogenrated doc for get_width */
    int get_width(int &out_width);

    /** Autogenrated doc for invert_display */
    int invert_display(const bool in_inv);

    /** Autogenrated doc for print */
    int print(const std::string in_text);

    /** Autogenrated doc for set_cursor */
    int set_cursor(const int in_x_loc,
        const int in_y_loc);

    /** Autogenrated doc for set_rotation */
    int set_rotation(const int in_rot);

    /** Autogenrated doc for set_text_color */
    int set_text_color(const int in_color);

    /** Autogenrated doc for set_text_size */
    int set_text_size(const int in_size);

};

#endif //__RAML2AGL_SERVICE_CLASS_SERVICEROVERDISPLAY_H_
