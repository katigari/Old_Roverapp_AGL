/* Copyright 2018 Pedro Cuadra - pjcuadra@gmail.com
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* WARNING: This file is automatically generated by raml2agl */
#include <service/ServiceRoverBuzzer.h>
#include <roverapi/rover_buzzer.hpp>
#include <roverapi/rover_api.hpp>
#include <unistd.h>

using namespace rover;

static RoverBuzzer buzzer;
static RoverBase base;

ServiceRoverBuzzer::ServiceRoverBuzzer() {
  AFB_NOTICE("[ServiceRoverBuzzer] Constructor ");
}

int ServiceRoverBuzzer::init() {
  AFB_NOTICE("[ServiceRoverBuzzer] Init ");

  base.initialize();

  buzzer.initialize();
  buzzer.setBuzzerOff();

  return 0;
}


/** Autogenrated doc for get_frequency */
int ServiceRoverBuzzer::get_frequency(int &out_buzzer_frequency) {

  AFB_NOTICE("[ServiceRoverBuzzer] Get_frequency");

  out_buzzer_frequency = buzzer.getBuzzerFrequency();

  return 0;
}

/** Autogenrated doc for play_melody */
int ServiceRoverBuzzer::play_melody(const int in_melody[], const int in_melody_size,
    const double in_tempo[], const int in_tempo_size) {

  AFB_NOTICE("[ServiceRoverBuzzer] Play_melody");
  int note_time = 0;

  for (int i = 0; i < in_melody_size; i++) {
    note_time = static_cast<int>(1000000.0/static_cast<double>(in_tempo[i]));
    buzzer.setBuzzerTone(in_melody[i]);
    usleep(note_time);
    buzzer.setBuzzerTone(0);
    usleep(static_cast<int>(note_time * 0.3));
  }

  buzzer.setBuzzerOff();

  return 0;
}

/** Autogenrated doc for set_frequency */
int ServiceRoverBuzzer::set_frequency(const int in_buzzer_frequency) {

  AFB_NOTICE("[ServiceRoverBuzzer] Set_frequency");

  buzzer.setBuzzerFrequency(in_buzzer_frequency);

  return 0;
}

/** Autogenrated doc for set_off */
int ServiceRoverBuzzer::set_off() {

  AFB_NOTICE("[ServiceRoverBuzzer] Set_off");

  buzzer.setBuzzerOff();

  return 0;
}

/** Autogenrated doc for set_on */
int ServiceRoverBuzzer::set_on() {

  AFB_NOTICE("[ServiceRoverBuzzer] Set_on");

  buzzer.setBuzzerOn();


  return 0;
}

/** Autogenrated doc for set_tone */
int ServiceRoverBuzzer::set_tone(const int in_buzzer_frequency) {

  AFB_NOTICE("[ServiceRoverBuzzer] Set_tone");

  buzzer.setBuzzerTone(in_buzzer_frequency);

  return 0;
}
