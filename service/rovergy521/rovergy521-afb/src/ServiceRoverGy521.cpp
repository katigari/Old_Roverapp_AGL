/* Copyright 2018 Pedro Cuadra - pjcuadra@gmail.com
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* WARNING: This file is automatically generated by raml2agl */
#include <service/ServiceRoverGy521.h>
#include <roverapi/rover_gy521.hpp>
#include <roverapi/rover_api.hpp>

using namespace rover;

static RoverGY521 obj;
static RoverBase base;

ServiceRoverGy521::ServiceRoverGy521() {
  AFB_NOTICE("[ServiceRoverGy521] Constructor ");
}

int ServiceRoverGy521::init() {
  AFB_NOTICE("[ServiceRoverGy521] Init ");

  base.initialize();
  obj.initialize();

  return 0;
}


/** Autogenrated doc for read_acc_x */
int ServiceRoverGy521::read_acc_x(int &out_acc_x) {

  AFB_NOTICE("[ServiceRoverGy521] Read_acc_x");

  out_acc_x = obj.getAccelX();

  return 0;
}

/** Autogenrated doc for read_acc_y */
int ServiceRoverGy521::read_acc_y(int &out_acc_y) {

  AFB_NOTICE("[ServiceRoverGy521] Read_acc_y");

  out_acc_y = obj.getAccelY();

  return 0;
}

/** Autogenrated doc for read_acc_z */
int ServiceRoverGy521::read_acc_z(int &out_acc_z) {

  AFB_NOTICE("[ServiceRoverGy521] Read_acc_z");

  out_acc_z = obj.getAccelZ();

  return 0;
}

/** Autogenrated doc for read_angle_x */
int ServiceRoverGy521::read_angle_x(double &out_angle_x) {

  AFB_NOTICE("[ServiceRoverGy521] Read_angle_x");

  out_angle_x = static_cast<double>(obj.getAngleX());

  return 0;
}

/** Autogenrated doc for read_angle_y */
int ServiceRoverGy521::read_angle_y(double &out_angle_y) {

  AFB_NOTICE("[ServiceRoverGy521] Read_angle_y");

  out_angle_y = static_cast<double>(obj.getAngleY());

  return 0;
}

/** Autogenrated doc for read_angle_z */
int ServiceRoverGy521::read_angle_z(double &out_angle_z) {

  AFB_NOTICE("[ServiceRoverGy521] Read_angle_z");
  out_angle_z = static_cast<double>(obj.getAngleZ());

  return 0;
}

/** Autogenrated doc for read_gyro_x */
int ServiceRoverGy521::read_gyro_x(int &out_gyro_x) {

  AFB_NOTICE("[ServiceRoverGy521] Read_gyro_x");
  out_gyro_x = static_cast<double>(obj.getGyroX());

  return 0;
}

/** Autogenrated doc for read_gyro_y */
int ServiceRoverGy521::read_gyro_y(int &out_gyro_y) {

  AFB_NOTICE("[ServiceRoverGy521] Read_gyro_y");
  out_gyro_y = static_cast<double>(obj.getGyroY());

  return 0;
}

/** Autogenrated doc for read_gyro_z */
int ServiceRoverGy521::read_gyro_z(int &out_gyro_z) {

  AFB_NOTICE("[ServiceRoverGy521] Read_gyro_z");
  out_gyro_z = static_cast<double>(obj.getGyroZ());

  return 0;
}
